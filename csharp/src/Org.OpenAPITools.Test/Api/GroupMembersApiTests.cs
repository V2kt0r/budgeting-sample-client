/*
 * Budgeting Server
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing GroupMembersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class GroupMembersApiTests : IDisposable
    {
        private GroupMembersApi instance;

        public GroupMembersApiTests()
        {
            instance = new GroupMembersApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GroupMembersApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' GroupMembersApi
            //Assert.IsType<GroupMembersApi>(instance);
        }

        /// <summary>
        /// Test AddGroupUser
        /// </summary>
        [Fact]
        public void AddGroupUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid groupUuid = null;
            //string username = null;
            //UserRole? userRole = null;
            //var response = instance.AddGroupUser(groupUuid, username, userRole);
            //Assert.IsType<Message>(response);
        }

        /// <summary>
        /// Test ChangeGroupUserRole
        /// </summary>
        [Fact]
        public void ChangeGroupUserRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid groupUuid = null;
            //string username = null;
            //UserRole userRole = null;
            //var response = instance.ChangeGroupUserRole(groupUuid, username, userRole);
            //Assert.IsType<Message>(response);
        }

        /// <summary>
        /// Test GetGroupUsers
        /// </summary>
        [Fact]
        public void GetGroupUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid groupUuid = null;
            //int? page = null;
            //int? itemsPerPage = null;
            //var response = instance.GetGroupUsers(groupUuid, page, itemsPerPage);
            //Assert.IsType<PaginatedListResponseUserReadWithUserRole>(response);
        }

        /// <summary>
        /// Test RemoveGroupUser
        /// </summary>
        [Fact]
        public void RemoveGroupUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid groupUuid = null;
            //string username = null;
            //var response = instance.RemoveGroupUser(groupUuid, username);
            //Assert.IsType<Message>(response);
        }
    }
}
